import{a as b}from"./chunk-5IMW6SUT.js";import{r as p}from"./chunk-UEBHN7X3.js";import{a as k,b as h,ca as c,ga as m,k as u,ma as d}from"./chunk-HT5E4KE5.js";var f=class o{authService=d(p);notificationsSubject=new u([]);notifications$=this.notificationsSubject.asObservable();unreadCountSubject=new u(0);unreadCount$=this.unreadCountSubject.asObservable();constructor(){this.loadNotifications()}loadNotifications(){let t=[{id:"1",type:"task_assigned",title:"Task Assigned",message:'You have been assigned to "Implement user authentication"',taskId:1,fromUser:{id:"user2",email:"jane@example.com",name:"Jane Smith"},toUser:{id:"user1",email:"john@example.com",name:"John Doe"},read:!1,createdAt:new Date("2024-01-16T10:30:00"),data:{taskTitle:"Implement user authentication"}},{id:"2",type:"project_shared",title:"Project Shared",message:'Jane Smith shared "TodoList App" project with you',projectId:1,fromUser:{id:"user2",email:"jane@example.com",name:"Jane Smith"},toUser:{id:"user1",email:"john@example.com",name:"John Doe"},read:!0,createdAt:new Date("2024-01-15T14:20:00"),data:{projectName:"TodoList App"}}];this.notificationsSubject.next(t),this.updateUnreadCount()}getNotifications(){return this.notifications$}getUnreadCount(){return this.unreadCount$}notifyTaskAssigned(t,e,i){let s={id:Date.now().toString(),type:"task_assigned",title:"Task Assigned",message:`${i.name} assigned you to "${t.title}"`,taskId:t.id,fromUser:i,toUser:e,read:!1,createdAt:new Date,data:{taskTitle:t.title,projectId:t.projectId}};this.addNotification(s)}notifyTaskUnassigned(t,e,i){let s={id:Date.now().toString(),type:"task_unassigned",title:"Task Unassigned",message:`${i.name} removed you from "${t.title}"`,taskId:t.id,fromUser:i,toUser:e,read:!1,createdAt:new Date,data:{taskTitle:t.title,projectId:t.projectId}};this.addNotification(s)}notifyTaskStatusChanged(t,e,i,s,a){if(!a)return;let r={id:Date.now().toString(),type:"task_status_changed",title:"Task Status Updated",message:`${s.name} moved "${t.title}" from ${e} to ${i}`,taskId:t.id,fromUser:s,toUser:a,read:!1,createdAt:new Date,data:{taskTitle:t.title,oldStatus:e,newStatus:i,projectId:t.projectId}};this.addNotification(r)}notifyTaskComment(t,e,i,s){if(!s||s.id===i.id)return;let a={id:Date.now().toString(),type:"task_comment",title:"New Comment",message:`${i.name} commented on "${t.title}": "${e.substring(0,50)}${e.length>50?"...":""}"`,taskId:t.id,fromUser:i,toUser:s,read:!1,createdAt:new Date,data:{taskTitle:t.title,commentText:e,projectId:t.projectId}};this.addNotification(a)}addNotification(t){let e=this.notificationsSubject.value,i=[t,...e];this.notificationsSubject.next(i),this.updateUnreadCount(),console.log("New notification created:",t)}markAsRead(t){let i=this.notificationsSubject.value.map(s=>s.id===t?h(k({},s),{read:!0}):s);this.notificationsSubject.next(i),this.updateUnreadCount()}markAllAsRead(){let e=this.notificationsSubject.value.map(i=>h(k({},i),{read:!0}));this.notificationsSubject.next(e),this.updateUnreadCount()}deleteNotification(t){let i=this.notificationsSubject.value.filter(s=>s.id!==t);this.notificationsSubject.next(i),this.updateUnreadCount()}updateUnreadCount(){let e=this.notificationsSubject.value.filter(i=>!i.read).length;this.unreadCountSubject.next(e)}getNotificationsForCurrentUser(){return this.authService.getCurrentUser()?this.notifications$:new u([]).asObservable()}static \u0275fac=function(e){return new(e||o)};static \u0275prov=m({token:o,factory:o.\u0275fac,providedIn:"root"})};var v=class o{api=d(b);notificationService=d(f);authService=d(p);createTask(t,e){return this.api.post(`/tasks/project/${t}`,e)}getProjectTasks(t){return this.api.get(`/tasks/project/${t}`)}getTask(t){return this.api.get(`/tasks/${t}`)}updateTask(t,e){return this.api.put(`/tasks/${t}`,e)}updateTaskStatus(t,e){return this.api.put(`/tasks/${t}/status`,e)}reorderTasks(t){return this.api.put(`/tasks/${t.taskId}/reorder`,t)}addComment(t,e){return this.api.post(`/tasks/${t}/comment`,e)}getTaskComments(t){return this.api.get(`/tasks/${t}/comments`)}deleteComment(t,e){return this.api.delete(`/tasks/${t}/comments/${e}`)}updateComment(t,e,i){return this.api.put(`/tasks/${t}/comments/${e}`,i)}deleteTask(t){return this.api.delete(`/tasks/${t}`)}getChecklistItems(t){return this.api.get(`/tasks/${t}/checklist`)}createChecklistItem(t,e){return this.api.post(`/tasks/${t}/checklist`,e)}updateChecklistItem(t,e,i){return this.api.put(`/tasks/${t}/checklist/${e}`,i)}deleteChecklistItem(t,e){return this.api.delete(`/tasks/${t}/checklist/${e}`)}reorderChecklistItems(t,e){return this.api.put(`/tasks/${t}/checklist/reorder`,e)}assignTask(t,e,i){let s=this.authService.getCurrentUser();return this.updateTask(t,{assignedTo:e}).pipe(c(a=>{if(s&&e){let r=i.find(n=>n.id===e);r&&r.id!==s.id&&this.notificationService.notifyTaskAssigned(a,r,s)}}))}unassignTask(t,e,i){let s=this.authService.getCurrentUser();return this.updateTask(t,{assignedTo:void 0}).pipe(c(a=>{if(s&&e){let r=i.find(n=>n.id===e);r&&r.id!==s.id&&this.notificationService.notifyTaskUnassigned(a,r,s)}}))}updateTaskWithNotification(t,e,i){let s=this.authService.getCurrentUser();return this.getTask(t).pipe(c(a=>{e._originalTask=a}),c(()=>{})).pipe(c(()=>this.updateTask(t,e)),c(a=>{let r=e._originalTask;if(s&&e.assignedTo!==void 0&&r.assignedTo!==e.assignedTo){if(e.assignedTo){let n=i.find(l=>l.id===e.assignedTo);n&&n.id!==s.id&&this.notificationService.notifyTaskAssigned(a,n,s)}else if(r.assignedTo){let n=i.find(l=>l.id===r.assignedTo);n&&n.id!==s.id&&this.notificationService.notifyTaskUnassigned(a,n,s)}}}))}static \u0275fac=function(e){return new(e||o)};static \u0275prov=m({token:o,factory:o.\u0275fac,providedIn:"root"})};export{v as a};
